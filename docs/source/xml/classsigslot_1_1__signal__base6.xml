<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1__signal__base6" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base6</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal6" prot="public" virt="non-virtual">sigslot::signal6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class arg2_type</type>
      </param>
      <param>
        <type>class arg3_type</type>
      </param>
      <param>
        <type>class arg4_type</type>
      </param>
      <param>
        <type>class arg5_type</type>
      </param>
      <param>
        <type>class arg6_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base6_1a490da89cba959644d407c06529f26bbc" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base6" kindref="compound">_connection_base6</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base6&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy&gt; *&gt; sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1178" column="1" bodyfile="sigslot.h" bodystart="1178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base6_1ab27270c94faf39b0de91e76cb49019b4" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1179" column="1" bodyfile="sigslot.h" bodystart="1179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base6_1ac44f9bb6d5aa420b7d26d040260201b7" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1180" column="1" bodyfile="sigslot.h" bodystart="1180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base6_1a57d39881c65ce2b31fccc6f47b42f26d" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1285" column="1" bodyfile="sigslot.h" bodystart="1285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base6_1a39b1390854c8362a31a9735fa3366e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::_signal_base6</definition>
        <argsstring>()</argsstring>
        <name>_signal_base6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1182" column="1" bodyfile="sigslot.h" bodystart="1182" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base6_1a67cc173ca7e7a7bc1136ad0f3e2e45d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::_signal_base6</definition>
        <argsstring>(const _signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt; &amp;s)</argsstring>
        <name>_signal_base6</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base6" kindref="compound">_signal_base6</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1187" column="1" bodyfile="sigslot.h" bodystart="1187" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base6_1a6107b837baa0f7895806631111766692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1204" column="1" bodyfile="sigslot.h" bodystart="1204" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base6_1a8ff3c679466477fb7b4f791d54dcee44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::~_signal_base6</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1221" column="1" bodyfile="sigslot.h" bodystart="1221" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base6_1ae64e2e0fdb9f9038acf84137fe5d0592" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1226" column="1" bodyfile="sigslot.h" bodystart="1226" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base6_1ac1def164d4937feff5e7e54a030bb979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1243" column="1" bodyfile="sigslot.h" bodystart="1243" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base6_1a956d68d0659dffe49749b5cd7f5466c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1263" column="1" bodyfile="sigslot.h" bodystart="1263" bodyend="1282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="127">
        <label>sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base6"/>
        <childnode refid="128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>sigslot::signal6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal6"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>mt_policy</label>
      </node>
      <node id="128">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="131">
        <label>sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base6"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>mt_policy</label>
      </node>
      <node id="132">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="133" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="1175" column="1" bodyfile="sigslot.h" bodystart="1174" bodyend="1286"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base6_1a39b1390854c8362a31a9735fa3366e7e" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>_signal_base6</name></member>
      <member refid="classsigslot_1_1__signal__base6_1a67cc173ca7e7a7bc1136ad0f3e2e45d7" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>_signal_base6</name></member>
      <member refid="classsigslot_1_1__signal__base6_1a490da89cba959644d407c06529f26bbc" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base6_1ab27270c94faf39b0de91e76cb49019b4" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base6_1ac1def164d4937feff5e7e54a030bb979" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base6_1ae64e2e0fdb9f9038acf84137fe5d0592" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base6_1ac44f9bb6d5aa420b7d26d040260201b7" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base6_1a57d39881c65ce2b31fccc6f47b42f26d" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base6_1a956d68d0659dffe49749b5cd7f5466c1" prot="public" virt="virtual"><scope>sigslot::_signal_base6</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base6_1a6107b837baa0f7895806631111766692" prot="public" virt="virtual"><scope>sigslot::_signal_base6</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base6_1a8ff3c679466477fb7b4f791d54dcee44" prot="public" virt="non-virtual"><scope>sigslot::_signal_base6</scope><name>~_signal_base6</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
