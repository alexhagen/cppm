<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1__connection__base5" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>sigslot::_connection_base5</compoundname>
    <derivedcompoundref refid="classsigslot_1_1__connection5" prot="public" virt="non-virtual">sigslot::_connection5&lt; dest_type, arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class arg2_type</type>
      </param>
      <param>
        <type>class arg3_type</type>
      </param>
      <param>
        <type>class arg4_type</type>
      </param>
      <param>
        <type>class arg5_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__connection__base5_1a9ed294c256858359fefd642a581785d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual sigslot::_connection_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::~_connection_base5</definition>
        <argsstring>()</argsstring>
        <name>~_connection_base5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="360" column="1" bodyfile="sigslot.h" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base5_1a6eba4d0a4bccf691b25ae5411090a177" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
        <definition>virtual has_slots&lt;mt_policy&gt;* sigslot::_connection_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::getdest</definition>
        <argsstring>() const =0</argsstring>
        <name>getdest</name>
        <reimplementedby refid="classsigslot_1_1__connection5_1a350a8526f8cb7cafe6aeff0f9be1b8ca">getdest</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base5_1a42d3e9d2a7a1f4e84ff378034c0669ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void sigslot::_connection_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type, arg2_type, arg3_type, arg4_type, arg5_type)=0</argsstring>
        <name>emit</name>
        <reimplementedby refid="classsigslot_1_1__connection5_1acf3cf991e14f96e7b70aacf8091f4634">emit</reimplementedby>
        <param>
          <type>arg1_type</type>
        </param>
        <param>
          <type>arg2_type</type>
        </param>
        <param>
          <type>arg3_type</type>
        </param>
        <param>
          <type>arg4_type</type>
        </param>
        <param>
          <type>arg5_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base5_1a2effb611f7fd779811d615d102238b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classsigslot_1_1__connection__base5" kindref="compound">_connection_base5</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt; *</type>
        <definition>virtual _connection_base5&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy&gt;* sigslot::_connection_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::clone</definition>
        <argsstring>()=0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classsigslot_1_1__connection5_1a6c354668c75823261d7f6ce6e85b185c">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base5_1a1e37275f967bd5df7ee10084d03eea75" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classsigslot_1_1__connection__base5" kindref="compound">_connection_base5</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt; *</type>
        <definition>virtual _connection_base5&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy&gt;* sigslot::_connection_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::duplicate</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pnewdest)=0</argsstring>
        <name>duplicate</name>
        <reimplementedby refid="classsigslot_1_1__connection5_1aee1a5b91cedb249c0ecaf3ccf033ad28">duplicate</reimplementedby>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pnewdest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="367" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="52">
        <label>sigslot::_connection5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection5"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>sigslot::_connection_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection__base5"/>
      </node>
    </inheritancegraph>
    <location file="sigslot.h" line="358" column="1" bodyfile="sigslot.h" bodystart="357" bodyend="368"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__connection__base5_1a2effb611f7fd779811d615d102238b75" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base5</scope><name>clone</name></member>
      <member refid="classsigslot_1_1__connection__base5_1a1e37275f967bd5df7ee10084d03eea75" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base5</scope><name>duplicate</name></member>
      <member refid="classsigslot_1_1__connection__base5_1a42d3e9d2a7a1f4e84ff378034c0669ec" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base5</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__connection__base5_1a6eba4d0a4bccf691b25ae5411090a177" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base5</scope><name>getdest</name></member>
      <member refid="classsigslot_1_1__connection__base5_1a9ed294c256858359fefd642a581785d5" prot="public" virt="virtual"><scope>sigslot::_connection_base5</scope><name>~_connection_base5</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
