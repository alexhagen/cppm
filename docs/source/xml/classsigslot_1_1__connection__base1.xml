<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1__connection__base1" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>sigslot::_connection_base1</compoundname>
    <derivedcompoundref refid="classsigslot_1_1__connection1" prot="public" virt="non-virtual">sigslot::_connection1&lt; dest_type, arg1_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__connection__base1_1a7f6b363770608c0ccc007bf43b136c5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual sigslot::_connection_base1&lt; arg1_type, mt_policy &gt;::~_connection_base1</definition>
        <argsstring>()</argsstring>
        <name>~_connection_base1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="315" column="1" bodyfile="sigslot.h" bodystart="315" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base1_1a847a73385094691a47ba3ac8c7c6a49a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
        <definition>virtual has_slots&lt;mt_policy&gt;* sigslot::_connection_base1&lt; arg1_type, mt_policy &gt;::getdest</definition>
        <argsstring>() const =0</argsstring>
        <name>getdest</name>
        <reimplementedby refid="classsigslot_1_1__connection1_1ab551ed981e3e7c48a258944161a4b409">getdest</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base1_1a422e11de49e5f287b837e445ea1abbfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void sigslot::_connection_base1&lt; arg1_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type)=0</argsstring>
        <name>emit</name>
        <reimplementedby refid="classsigslot_1_1__connection1_1a26ed4f815a617ae14481503798a16736">emit</reimplementedby>
        <param>
          <type>arg1_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base1_1a1fba07904c0fbe6a3f7fca6abff56717" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classsigslot_1_1__connection__base1" kindref="compound">_connection_base1</ref>&lt; arg1_type, mt_policy &gt; *</type>
        <definition>virtual _connection_base1&lt;arg1_type, mt_policy&gt;* sigslot::_connection_base1&lt; arg1_type, mt_policy &gt;::clone</definition>
        <argsstring>()=0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classsigslot_1_1__connection1_1ac51f8ad0c820934345ce743255822e1d">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection__base1_1abdc9ea335c8def32a38750f2951042d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classsigslot_1_1__connection__base1" kindref="compound">_connection_base1</ref>&lt; arg1_type, mt_policy &gt; *</type>
        <definition>virtual _connection_base1&lt;arg1_type, mt_policy&gt;* sigslot::_connection_base1&lt; arg1_type, mt_policy &gt;::duplicate</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pnewdest)=0</argsstring>
        <name>duplicate</name>
        <reimplementedby refid="classsigslot_1_1__connection1_1ae9d53a39d81e555b716254efedb0c427">duplicate</reimplementedby>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pnewdest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="319" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="40">
        <label>sigslot::_connection1&lt; arg1_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection1"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>sigslot::_connection_base1&lt; arg1_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection__base1"/>
      </node>
    </inheritancegraph>
    <location file="sigslot.h" line="313" column="1" bodyfile="sigslot.h" bodystart="312" bodyend="320"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__connection__base1_1a1fba07904c0fbe6a3f7fca6abff56717" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base1</scope><name>clone</name></member>
      <member refid="classsigslot_1_1__connection__base1_1abdc9ea335c8def32a38750f2951042d0" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base1</scope><name>duplicate</name></member>
      <member refid="classsigslot_1_1__connection__base1_1a422e11de49e5f287b837e445ea1abbfe" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base1</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__connection__base1_1a847a73385094691a47ba3ac8c7c6a49a" prot="public" virt="pure-virtual"><scope>sigslot::_connection_base1</scope><name>getdest</name></member>
      <member refid="classsigslot_1_1__connection__base1_1a7f6b363770608c0ccc007bf43b136c5c" prot="public" virt="virtual"><scope>sigslot::_connection_base1</scope><name>~_connection_base1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
