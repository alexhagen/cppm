<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1__signal__base0" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base0</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal0" prot="public" virt="non-virtual">sigslot::signal0&lt; mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class mt_policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base0_1a1392647fd0590714894e3cbe1a66c983" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base0" kindref="compound">_connection_base0</ref>&lt; mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base0&lt;mt_policy&gt; *&gt; sigslot::_signal_base0&lt; mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="491" column="1" bodyfile="sigslot.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base0_1a9b469c414628c3b8f35924acdd479f5b" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base0&lt; mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="492" column="1" bodyfile="sigslot.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base0_1ad4bd664f9521e53c804692e7f0090587" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base0&lt; mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="493" column="1" bodyfile="sigslot.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base0_1ad6f4190232d45c850b7993fbeddfb3ab" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base0&lt; mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="597" column="1" bodyfile="sigslot.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base0_1aa25e678dcb82781a9aab5d669118f939" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base0&lt; mt_policy &gt;::_signal_base0</definition>
        <argsstring>()</argsstring>
        <name>_signal_base0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="495" column="1" bodyfile="sigslot.h" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base0_1a0ded59e1136158cabfa3172206c743dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base0&lt; mt_policy &gt;::_signal_base0</definition>
        <argsstring>(const _signal_base0 &amp;s)</argsstring>
        <name>_signal_base0</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base0" kindref="compound">_signal_base0</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="500" column="1" bodyfile="sigslot.h" bodystart="500" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base0_1af0adfa58a38048e7aadefb7f25b331bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base0&lt; mt_policy &gt;::~_signal_base0</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="516" column="1" bodyfile="sigslot.h" bodystart="516" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base0_1a35d942ad3a4396414419a3f46256460d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base0&lt; mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="521" column="1" bodyfile="sigslot.h" bodystart="521" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base0_1ae49661a8ac31668c553ae4fa363ad9c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base0&lt; mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="538" column="1" bodyfile="sigslot.h" bodystart="538" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base0_1a002f81194c0b2e224c59fb9c43b769f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base0&lt; mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="558" column="1" bodyfile="sigslot.h" bodystart="558" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base0_1acd0840dbef9a34fc48469e04f1d2df45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base0&lt; mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="579" column="1" bodyfile="sigslot.h" bodystart="579" bodyend="594"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="88">
        <label>sigslot::signal0&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal0"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>mt_policy</label>
      </node>
      <node id="86">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="87" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>sigslot::_signal_base0&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base0"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="91">
        <label>mt_policy</label>
      </node>
      <node id="90">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="91" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>sigslot::_signal_base0&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base0"/>
        <childnode refid="90" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="489" column="1" bodyfile="sigslot.h" bodystart="488" bodyend="598"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base0_1aa25e678dcb82781a9aab5d669118f939" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>_signal_base0</name></member>
      <member refid="classsigslot_1_1__signal__base0_1a0ded59e1136158cabfa3172206c743dd" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>_signal_base0</name></member>
      <member refid="classsigslot_1_1__signal__base0_1a1392647fd0590714894e3cbe1a66c983" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base0_1a9b469c414628c3b8f35924acdd479f5b" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base0_1ae49661a8ac31668c553ae4fa363ad9c1" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base0_1a35d942ad3a4396414419a3f46256460d" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base0_1ad4bd664f9521e53c804692e7f0090587" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base0_1ad6f4190232d45c850b7993fbeddfb3ab" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base0_1a002f81194c0b2e224c59fb9c43b769f0" prot="public" virt="virtual"><scope>sigslot::_signal_base0</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base0_1acd0840dbef9a34fc48469e04f1d2df45" prot="public" virt="virtual"><scope>sigslot::_signal_base0</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base0_1af0adfa58a38048e7aadefb7f25b331bc" prot="public" virt="non-virtual"><scope>sigslot::_signal_base0</scope><name>~_signal_base0</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
