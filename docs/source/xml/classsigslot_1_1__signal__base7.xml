<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1__signal__base7" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base7</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal7" prot="public" virt="non-virtual">sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class arg2_type</type>
      </param>
      <param>
        <type>class arg3_type</type>
      </param>
      <param>
        <type>class arg4_type</type>
      </param>
      <param>
        <type>class arg5_type</type>
      </param>
      <param>
        <type>class arg6_type</type>
      </param>
      <param>
        <type>class arg7_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base7_1a26f5e886d0ff2fe1c88858b172f73770" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base7" kindref="compound">_connection_base7</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base7&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy&gt; *&gt; sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1294" column="1" bodyfile="sigslot.h" bodystart="1294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base7_1a6a0c17a2554e64b8a38252f1113db1f7" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1295" column="1" bodyfile="sigslot.h" bodystart="1295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base7_1ab638034bec9e3b48858e2317ffdf78ca" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1296" column="1" bodyfile="sigslot.h" bodystart="1296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base7_1af749f636932eb90375b4b5e8711756b9" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1401" column="1" bodyfile="sigslot.h" bodystart="1401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base7_1a4fdbef17b7c25a53b4610410d60fcdfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::_signal_base7</definition>
        <argsstring>()</argsstring>
        <name>_signal_base7</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1298" column="1" bodyfile="sigslot.h" bodystart="1298" bodyend="1301"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base7_1a678d0d92bc65da5113da8296a3c7e7e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::_signal_base7</definition>
        <argsstring>(const _signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt; &amp;s)</argsstring>
        <name>_signal_base7</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base7" kindref="compound">_signal_base7</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1303" column="1" bodyfile="sigslot.h" bodystart="1303" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base7_1a8942155af25b0b1847827fc797ba7465" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1320" column="1" bodyfile="sigslot.h" bodystart="1320" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base7_1ae26450d60511692155df999feef5d17c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::~_signal_base7</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base7</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1337" column="1" bodyfile="sigslot.h" bodystart="1337" bodyend="1340"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base7_1a39c91c2e580540fbff149ee5d1d47501" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1342" column="1" bodyfile="sigslot.h" bodystart="1342" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base7_1a09804df31bec573e360a0a6156ad55d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1359" column="1" bodyfile="sigslot.h" bodystart="1359" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base7_1a38ae3c8415750b772fe1cab99afb0a04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1379" column="1" bodyfile="sigslot.h" bodystart="1379" bodyend="1398"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="137">
        <label>sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal7"/>
        <childnode refid="134" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>mt_policy</label>
      </node>
      <node id="135">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="134">
        <label>sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base7"/>
        <childnode refid="135" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="140">
        <label>mt_policy</label>
      </node>
      <node id="139">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base7"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="1291" column="1" bodyfile="sigslot.h" bodystart="1290" bodyend="1402"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base7_1a4fdbef17b7c25a53b4610410d60fcdfc" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>_signal_base7</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a678d0d92bc65da5113da8296a3c7e7e5" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>_signal_base7</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a26f5e886d0ff2fe1c88858b172f73770" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a6a0c17a2554e64b8a38252f1113db1f7" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a09804df31bec573e360a0a6156ad55d1" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a39c91c2e580540fbff149ee5d1d47501" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base7_1ab638034bec9e3b48858e2317ffdf78ca" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base7_1af749f636932eb90375b4b5e8711756b9" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a38ae3c8415750b772fe1cab99afb0a04" prot="public" virt="virtual"><scope>sigslot::_signal_base7</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a8942155af25b0b1847827fc797ba7465" prot="public" virt="virtual"><scope>sigslot::_signal_base7</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base7_1ae26450d60511692155df999feef5d17c" prot="public" virt="non-virtual"><scope>sigslot::_signal_base7</scope><name>~_signal_base7</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
