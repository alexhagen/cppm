<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1__signal__base5" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base5</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal5" prot="public" virt="non-virtual">sigslot::signal5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class arg2_type</type>
      </param>
      <param>
        <type>class arg3_type</type>
      </param>
      <param>
        <type>class arg4_type</type>
      </param>
      <param>
        <type>class arg5_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base5_1aa2a4e48edd5e98f3da7ee5c2cc2ec1e4" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base5" kindref="compound">_connection_base5</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base5&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy&gt; *&gt; sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1062" column="1" bodyfile="sigslot.h" bodystart="1062" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base5_1a9e82732ba4ad495fc4a676df6633a87d" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1063" column="1" bodyfile="sigslot.h" bodystart="1063" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base5_1aef2df2fb8806fccef94104b4c0578c0a" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1064" column="1" bodyfile="sigslot.h" bodystart="1064" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base5_1afa0c66edbae0e6094e0ecc0e742cd0f3" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1169" column="1" bodyfile="sigslot.h" bodystart="1169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base5_1af01ee5099c3d8da81ace0ec622cc7d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::_signal_base5</definition>
        <argsstring>()</argsstring>
        <name>_signal_base5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1066" column="1" bodyfile="sigslot.h" bodystart="1066" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base5_1a2344007fa2c0e8075ce78c4857b12d89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::_signal_base5</definition>
        <argsstring>(const _signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt; &amp;s)</argsstring>
        <name>_signal_base5</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base5" kindref="compound">_signal_base5</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1071" column="1" bodyfile="sigslot.h" bodystart="1071" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base5_1a1d5c77453182dd7ef6482ebf272f9ba7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1088" column="1" bodyfile="sigslot.h" bodystart="1088" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base5_1a996c009b69c8c4dac4e30fca985e9c84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::~_signal_base5</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1105" column="1" bodyfile="sigslot.h" bodystart="1105" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base5_1a782c40a871c062a73eca4ecc5693badc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1110" column="1" bodyfile="sigslot.h" bodystart="1110" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base5_1a37890529539f896e4c79ea7e21787ab7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1127" column="1" bodyfile="sigslot.h" bodystart="1127" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base5_1a9abd97f4378a4f72fb5ec7a11d983c76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1147" column="1" bodyfile="sigslot.h" bodystart="1147" bodyend="1166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="120">
        <label>sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base5"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>sigslot::signal5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal5"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>mt_policy</label>
      </node>
      <node id="121">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="124">
        <label>sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base5"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>mt_policy</label>
      </node>
      <node id="125">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="126" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="1059" column="1" bodyfile="sigslot.h" bodystart="1058" bodyend="1170"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base5_1af01ee5099c3d8da81ace0ec622cc7d9d" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>_signal_base5</name></member>
      <member refid="classsigslot_1_1__signal__base5_1a2344007fa2c0e8075ce78c4857b12d89" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>_signal_base5</name></member>
      <member refid="classsigslot_1_1__signal__base5_1aa2a4e48edd5e98f3da7ee5c2cc2ec1e4" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base5_1a9e82732ba4ad495fc4a676df6633a87d" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base5_1a37890529539f896e4c79ea7e21787ab7" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base5_1a782c40a871c062a73eca4ecc5693badc" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base5_1aef2df2fb8806fccef94104b4c0578c0a" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base5_1afa0c66edbae0e6094e0ecc0e742cd0f3" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base5_1a9abd97f4378a4f72fb5ec7a11d983c76" prot="public" virt="virtual"><scope>sigslot::_signal_base5</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base5_1a1d5c77453182dd7ef6482ebf272f9ba7" prot="public" virt="virtual"><scope>sigslot::_signal_base5</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base5_1a996c009b69c8c4dac4e30fca985e9c84" prot="public" virt="non-virtual"><scope>sigslot::_signal_base5</scope><name>~_signal_base5</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
