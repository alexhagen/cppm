<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1__signal__base3" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base3</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal3" prot="public" virt="non-virtual">sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>arg1_type</declname>
        <defname>arg1_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg2_type</declname>
        <defname>arg2_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg3_type</declname>
        <defname>arg3_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base3_1a3579725fb44440638194b374cf5f401f" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base3" kindref="compound">_connection_base3</ref>&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base3&lt;arg1_type, arg2_type, arg3_type, mt_policy&gt; *&gt; sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="833" column="1" bodyfile="sigslot.h" bodystart="833" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base3_1a12798db35825a50c447014c858e98b9f" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="835" column="1" bodyfile="sigslot.h" bodystart="835" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base3_1a6d5697983814a4f95398ec119f9316d4" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="836" column="1" bodyfile="sigslot.h" bodystart="836" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base3_1a12827e355fb1aa4b2d655a4c3f9a65d0" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="939" column="1" bodyfile="sigslot.h" bodystart="939" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base3_1ae2699ce7e97873e22df157471eb22f36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::_signal_base3</definition>
        <argsstring>()</argsstring>
        <name>_signal_base3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="837" column="1" bodyfile="sigslot.h" bodystart="837" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base3_1aed60ea88729200b0fcb12fcfebd16a2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::_signal_base3</definition>
        <argsstring>(const _signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt; &amp;s)</argsstring>
        <name>_signal_base3</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base3" kindref="compound">_signal_base3</ref>&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="842" column="1" bodyfile="sigslot.h" bodystart="842" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base3_1a9fd81d281480f07ff9b0742503bb3edc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="858" column="1" bodyfile="sigslot.h" bodystart="858" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base3_1aea47871a26a26b0e463d6f5d219d710c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::~_signal_base3</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="875" column="1" bodyfile="sigslot.h" bodystart="875" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base3_1a9f3b9151fd99881f259283fd7dfc1a7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="880" column="1" bodyfile="sigslot.h" bodystart="880" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base3_1ae388a3ad320d4a641190870fdbbf2443" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="897" column="1" bodyfile="sigslot.h" bodystart="897" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base3_1a0da5458d64b4e21b0f2b839826838e0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="917" column="1" bodyfile="sigslot.h" bodystart="917" bodyend="936"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="109">
        <label>sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal3"/>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base3"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>mt_policy</label>
      </node>
      <node id="107">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="108" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="110">
        <label>sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base3"/>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>mt_policy</label>
      </node>
      <node id="111">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="830" column="1" bodyfile="sigslot.h" bodystart="829" bodyend="940"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base3_1ae2699ce7e97873e22df157471eb22f36" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>_signal_base3</name></member>
      <member refid="classsigslot_1_1__signal__base3_1aed60ea88729200b0fcb12fcfebd16a2c" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>_signal_base3</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a3579725fb44440638194b374cf5f401f" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a12798db35825a50c447014c858e98b9f" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base3_1ae388a3ad320d4a641190870fdbbf2443" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a9f3b9151fd99881f259283fd7dfc1a7b" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a6d5697983814a4f95398ec119f9316d4" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a12827e355fb1aa4b2d655a4c3f9a65d0" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a0da5458d64b4e21b0f2b839826838e0d" prot="public" virt="virtual"><scope>sigslot::_signal_base3</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a9fd81d281480f07ff9b0742503bb3edc" prot="public" virt="virtual"><scope>sigslot::_signal_base3</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base3_1aea47871a26a26b0e463d6f5d219d710c" prot="public" virt="non-virtual"><scope>sigslot::_signal_base3</scope><name>~_signal_base3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
