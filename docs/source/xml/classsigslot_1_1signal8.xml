<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1signal8" kind="class" language="C++" prot="public">
    <compoundname>sigslot::signal8</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base8" prot="public" virt="non-virtual">sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class arg2_type</type>
      </param>
      <param>
        <type>class arg3_type</type>
      </param>
      <param>
        <type>class arg4_type</type>
      </param>
      <param>
        <type>class arg5_type</type>
      </param>
      <param>
        <type>class arg6_type</type>
      </param>
      <param>
        <type>class arg7_type</type>
      </param>
      <param>
        <type>class arg8_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
        <defval>SIGSLOT_DEFAULT_MT_POLICY</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1signal8_1a157e6d2f9957fa5883e24b468bb9950d" prot="public" static="no">
        <type><ref refid="classsigslot_1_1__signal__base8" kindref="compound">_signal_base8</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::connections_list::const_iterator</type>
        <definition>typedef _signal_base8&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy&gt;::connections_list::const_iterator sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2467" column="1" bodyfile="sigslot.h" bodystart="2467" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1signal8_1a03b4849211c3c81a74327c20109cb9a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::signal8</definition>
        <argsstring>()</argsstring>
        <name>signal8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2468" column="1" bodyfile="sigslot.h" bodystart="2468" bodyend="2471"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal8_1a16c787e5569efcad34c98271a22aab5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::signal8</definition>
        <argsstring>(const signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt; &amp;s)</argsstring>
        <name>signal8</name>
        <param>
          <type>const <ref refid="classsigslot_1_1signal8" kindref="compound">signal8</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2473" column="1" bodyfile="sigslot.h" bodystart="2473" bodyend="2479"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal8_1aa220b300dc206f279e0a1d28876bfbd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class desttype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::connect</definition>
        <argsstring>(desttype *pclass, void(desttype::*pmemfun)(arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type))</argsstring>
        <name>connect</name>
        <param>
          <type>desttype *</type>
          <declname>pclass</declname>
        </param>
        <param>
          <type>void(desttype::*)(arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type)</type>
          <declname>pmemfun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2482" column="1" bodyfile="sigslot.h" bodystart="2482" bodyend="2494"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal8_1aff24da396520ca58407c2e11f3edbf0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4, arg5_type a5, arg6_type a6, arg7_type a7, arg8_type a8)</argsstring>
        <name>emit</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>arg3_type</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>arg4_type</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>arg5_type</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>arg6_type</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>arg7_type</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>arg8_type</type>
          <declname>a8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2496" column="1" bodyfile="sigslot.h" bodystart="2496" bodyend="2512"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal8_1a61cdc5296299ecb72a12086e677b7b66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::operator()</definition>
        <argsstring>(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4, arg5_type a5, arg6_type a6, arg7_type a7, arg8_type a8)</argsstring>
        <name>operator()</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>arg3_type</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>arg4_type</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>arg5_type</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>arg6_type</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>arg7_type</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>arg8_type</type>
          <declname>a8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2514" column="1" bodyfile="sigslot.h" bodystart="2514" bodyend="2530"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="284">
        <label>sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base8"/>
        <childnode refid="285" relation="public-inheritance">
        </childnode>
      </node>
      <node id="283">
        <label>sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal8"/>
        <childnode refid="284" relation="public-inheritance">
        </childnode>
      </node>
      <node id="286">
        <label>mt_policy</label>
      </node>
      <node id="285">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="286" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="288">
        <label>sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base8"/>
        <childnode refid="289" relation="public-inheritance">
        </childnode>
      </node>
      <node id="287">
        <label>sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal8"/>
        <childnode refid="288" relation="public-inheritance">
        </childnode>
      </node>
      <node id="290">
        <label>mt_policy</label>
      </node>
      <node id="289">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="290" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="2464" column="1" bodyfile="sigslot.h" bodystart="2462" bodyend="2531"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base8_1a6c85b75f8ad13e5f075a937c43734367" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>_signal_base8</name></member>
      <member refid="classsigslot_1_1__signal__base8_1aacacaa6f6a15450e9bac0f5cd64351ad" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>_signal_base8</name></member>
      <member refid="classsigslot_1_1signal8_1aa220b300dc206f279e0a1d28876bfbd2" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>connect</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a24ab3253426f94f89b9fbcf31a006dce" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1signal8_1a157e6d2f9957fa5883e24b468bb9950d" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a77aa9b79d342ec0aa1dedd4ab09f1939" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base8_1abe3c07398348ad7eddafa22b09d1cd97" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1signal8_1aff24da396520ca58407c2e11f3edbf0f" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__signal__base8_1af66d5bc5c012bef12e4825012a309c4e" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a8e787751763d8d05759d2173757f124e" prot="protected" virt="non-virtual"><scope>sigslot::signal8</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1signal8_1a61cdc5296299ecb72a12086e677b7b66" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>operator()</name></member>
      <member refid="classsigslot_1_1signal8_1a03b4849211c3c81a74327c20109cb9a0" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>signal8</name></member>
      <member refid="classsigslot_1_1signal8_1a16c787e5569efcad34c98271a22aab5a" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>signal8</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a214c5d81faababf978bb251983ebbac0" prot="public" virt="virtual"><scope>sigslot::signal8</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a4174d19421ebaf1c0441c7c71eb3e2ea" prot="public" virt="virtual"><scope>sigslot::signal8</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a52a212f984ff546515d5e6e20ac7ef20" prot="public" virt="non-virtual"><scope>sigslot::signal8</scope><name>~_signal_base8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
