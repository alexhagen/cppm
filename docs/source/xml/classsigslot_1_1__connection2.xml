<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1__connection2" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_connection2</compoundname>
    <basecompoundref refid="classsigslot_1_1__connection__base2" prot="public" virt="non-virtual">sigslot::_connection_base2&lt; arg1_type, arg2_type, mt_policy &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>dest_type</declname>
        <defname>dest_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg1_type</declname>
        <defname>arg1_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg2_type</declname>
        <defname>arg2_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__connection2_1a23fdac0d6fe04839654f6927b8806b13" prot="private" static="no" mutable="no">
        <type>dest_type *</type>
        <definition>dest_type* sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::m_pobject</definition>
        <argsstring></argsstring>
        <name>m_pobject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1642" column="1" bodyfile="sigslot.h" bodystart="1642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsigslot_1_1__connection2_1abec7859c4aa6897def28236739a30ca5" prot="private" static="no" mutable="no">
        <type>void(dest_type::*</type>
        <definition>void(dest_type::*  sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::m_pmemfun) (arg1_type, arg2_type)</definition>
        <argsstring>)(arg1_type, arg2_type)</argsstring>
        <name>m_pmemfun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1643" column="1" bodyfile="sigslot.h" bodystart="1643" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__connection2_1a8460ab8f5435c2683bdd65a89d475ac6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::_connection2</definition>
        <argsstring>()</argsstring>
        <name>_connection2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1608" column="1" bodyfile="sigslot.h" bodystart="1608" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection2_1ac630b880a2d95be4c7408791d1902b8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::_connection2</definition>
        <argsstring>(dest_type *pobject, void(dest_type::*pmemfun)(arg1_type, arg2_type))</argsstring>
        <name>_connection2</name>
        <param>
          <type>dest_type *</type>
          <declname>pobject</declname>
        </param>
        <param>
          <type>void(dest_type::*)(arg1_type, arg2_type)</type>
          <declname>pmemfun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1614" column="1" bodyfile="sigslot.h" bodystart="1614" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection2_1a2cf882a4d1722f938f4e615a9517ff34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsigslot_1_1__connection__base2" kindref="compound">_connection_base2</ref>&lt; arg1_type, arg2_type, mt_policy &gt; *</type>
        <definition>virtual _connection_base2&lt;arg1_type, arg2_type, mt_policy&gt;* sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplements refid="classsigslot_1_1__connection__base2_1a6642e19b98b0be9ec8f776926870e7f9">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1621" column="1" bodyfile="sigslot.h" bodystart="1621" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection2_1a660d4d99dcd26199317934106befc36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsigslot_1_1__connection__base2" kindref="compound">_connection_base2</ref>&lt; arg1_type, arg2_type, mt_policy &gt; *</type>
        <definition>virtual _connection_base2&lt;arg1_type, arg2_type, mt_policy&gt;* sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::duplicate</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pnewdest)</argsstring>
        <name>duplicate</name>
        <reimplements refid="classsigslot_1_1__connection__base2_1a7f79be4dc4970b1189608e673d8e8cdc">duplicate</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pnewdest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1626" column="1" bodyfile="sigslot.h" bodystart="1626" bodyend="1629"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection2_1a4d95c5441a9cc8515af0686a16445839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type a1, arg2_type a2)</argsstring>
        <name>emit</name>
        <reimplements refid="classsigslot_1_1__connection__base2_1adf0377e33f1510bed2efa66a854f59ce">emit</reimplements>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1631" column="1" bodyfile="sigslot.h" bodystart="1631" bodyend="1634"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection2_1a4bad19cd4ea7d5a67c3d05f2c344313d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
        <definition>virtual has_slots&lt;mt_policy&gt;* sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;::getdest</definition>
        <argsstring>() const </argsstring>
        <name>getdest</name>
        <reimplements refid="classsigslot_1_1__connection__base2_1addab8db787858d082098e0ff6fd5b84b">getdest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1636" column="1" bodyfile="sigslot.h" bodystart="1636" bodyend="1639"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>sigslot::_connection_base2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection__base2"/>
      </node>
      <node id="8">
        <label>sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection2"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>sigslot::_connection_base2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection__base2"/>
      </node>
      <node id="10">
        <label>sigslot::_connection2&lt; dest_type, arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection2"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="1606" column="1" bodyfile="sigslot.h" bodystart="1605" bodyend="1644"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__connection2_1a8460ab8f5435c2683bdd65a89d475ac6" prot="public" virt="non-virtual"><scope>sigslot::_connection2</scope><name>_connection2</name></member>
      <member refid="classsigslot_1_1__connection2_1ac630b880a2d95be4c7408791d1902b8f" prot="public" virt="non-virtual"><scope>sigslot::_connection2</scope><name>_connection2</name></member>
      <member refid="classsigslot_1_1__connection2_1a2cf882a4d1722f938f4e615a9517ff34" prot="public" virt="virtual"><scope>sigslot::_connection2</scope><name>clone</name></member>
      <member refid="classsigslot_1_1__connection2_1a660d4d99dcd26199317934106befc36b" prot="public" virt="virtual"><scope>sigslot::_connection2</scope><name>duplicate</name></member>
      <member refid="classsigslot_1_1__connection2_1a4d95c5441a9cc8515af0686a16445839" prot="public" virt="virtual"><scope>sigslot::_connection2</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__connection2_1a4bad19cd4ea7d5a67c3d05f2c344313d" prot="public" virt="virtual"><scope>sigslot::_connection2</scope><name>getdest</name></member>
      <member refid="classsigslot_1_1__connection2_1abec7859c4aa6897def28236739a30ca5" prot="private" virt="non-virtual"><scope>sigslot::_connection2</scope><name>m_pmemfun</name></member>
      <member refid="classsigslot_1_1__connection2_1a23fdac0d6fe04839654f6927b8806b13" prot="private" virt="non-virtual"><scope>sigslot::_connection2</scope><name>m_pobject</name></member>
      <member refid="classsigslot_1_1__connection__base2_1ad54233d5d0eb3190e1090e8bd55cd249" prot="public" virt="virtual"><scope>sigslot::_connection2</scope><name>~_connection_base2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
