<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1__signal__base2" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base2</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal2" prot="public" virt="non-virtual">sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>arg1_type</declname>
        <defname>arg1_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg2_type</declname>
        <defname>arg2_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base2_1afe119ceec2a5f2d38065a5363c4b4dc4" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base2" kindref="compound">_connection_base2</ref>&lt; arg1_type, arg2_type, mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base2&lt;arg1_type, arg2_type, mt_policy&gt; *&gt; sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="719" column="1" bodyfile="sigslot.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base2_1a688ae83bac113c27576b11229b42dd62" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="720" column="1" bodyfile="sigslot.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base2_1a540951f83ccc997fb4fd548e83460e68" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="721" column="1" bodyfile="sigslot.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base2_1ac507c6988f75d2fa75d25ac06d3f3717" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="825" column="1" bodyfile="sigslot.h" bodystart="825" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base2_1a1a891ebe5ab1cdfb3138c2fdc32c6c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::_signal_base2</definition>
        <argsstring>()</argsstring>
        <name>_signal_base2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="723" column="1" bodyfile="sigslot.h" bodystart="723" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base2_1a5c42c60b4b2afc55314dd07de1c5c587" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::_signal_base2</definition>
        <argsstring>(const _signal_base2&lt; arg1_type, arg2_type, mt_policy &gt; &amp;s)</argsstring>
        <name>_signal_base2</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base2" kindref="compound">_signal_base2</ref>&lt; arg1_type, arg2_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="728" column="1" bodyfile="sigslot.h" bodystart="728" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base2_1a23f085b3816ad6f9952e5fc3e8673ea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="744" column="1" bodyfile="sigslot.h" bodystart="744" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base2_1ab18bbe49a91957e06f5ccaf9874327f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::~_signal_base2</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="761" column="1" bodyfile="sigslot.h" bodystart="761" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base2_1a2749b7ee2d1ac7f8eee02a77490ece81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="766" column="1" bodyfile="sigslot.h" bodystart="766" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base2_1a720d11b4e86ef862f97fe78098b19d7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="783" column="1" bodyfile="sigslot.h" bodystart="783" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base2_1ae33d30c9fe1da690122dd056b25f0c9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="803" column="1" bodyfile="sigslot.h" bodystart="803" bodyend="822"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="99">
        <label>sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base2"/>
        <childnode refid="100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal2"/>
        <childnode refid="99" relation="public-inheritance">
        </childnode>
      </node>
      <node id="101">
        <label>mt_policy</label>
      </node>
      <node id="100">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="101" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="103">
        <label>sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base2"/>
        <childnode refid="104" relation="public-inheritance">
        </childnode>
      </node>
      <node id="105">
        <label>mt_policy</label>
      </node>
      <node id="104">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="716" column="1" bodyfile="sigslot.h" bodystart="715" bodyend="826"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base2_1a1a891ebe5ab1cdfb3138c2fdc32c6c9c" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>_signal_base2</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a5c42c60b4b2afc55314dd07de1c5c587" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>_signal_base2</name></member>
      <member refid="classsigslot_1_1__signal__base2_1afe119ceec2a5f2d38065a5363c4b4dc4" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a688ae83bac113c27576b11229b42dd62" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a720d11b4e86ef862f97fe78098b19d7f" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a2749b7ee2d1ac7f8eee02a77490ece81" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a540951f83ccc997fb4fd548e83460e68" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base2_1ac507c6988f75d2fa75d25ac06d3f3717" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base2_1ae33d30c9fe1da690122dd056b25f0c9a" prot="public" virt="virtual"><scope>sigslot::_signal_base2</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a23f085b3816ad6f9952e5fc3e8673ea4" prot="public" virt="virtual"><scope>sigslot::_signal_base2</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base2_1ab18bbe49a91957e06f5ccaf9874327f5" prot="public" virt="non-virtual"><scope>sigslot::_signal_base2</scope><name>~_signal_base2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
