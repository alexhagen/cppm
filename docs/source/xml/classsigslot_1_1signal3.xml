<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1signal3" kind="class" language="C++" prot="public">
    <compoundname>sigslot::signal3</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base3" prot="public" virt="non-virtual">sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>arg1_type</declname>
        <defname>arg1_type</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>arg2_type</declname>
        <defname>arg2_type</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>arg3_type</declname>
        <defname>arg3_type</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
        <defval>SIGSLOT_DEFAULT_MT_POLICY</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1signal3_1ab183eed66345b347984339c5b27e0873" prot="public" static="no">
        <type><ref refid="classsigslot_1_1__signal__base3" kindref="compound">_signal_base3</ref>&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::connections_list::const_iterator</type>
        <definition>typedef _signal_base3&lt;arg1_type, arg2_type, arg3_type, mt_policy&gt;::connections_list::const_iterator sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2124" column="1" bodyfile="sigslot.h" bodystart="2124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1signal3_1a04f51711a997e26a9d285da00431c01f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::signal3</definition>
        <argsstring>()</argsstring>
        <name>signal3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2125" column="1" bodyfile="sigslot.h" bodystart="2125" bodyend="2128"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal3_1ae96bc3af6b2ff424e74ac81ff260dbdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::signal3</definition>
        <argsstring>(const signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt; &amp;s)</argsstring>
        <name>signal3</name>
        <param>
          <type>const <ref refid="classsigslot_1_1signal3" kindref="compound">signal3</ref>&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2130" column="1" bodyfile="sigslot.h" bodystart="2130" bodyend="2134"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal3_1a08232ae3b36fd31ec850ade003a2b223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class desttype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::connect</definition>
        <argsstring>(desttype *pclass, void(desttype::*pmemfun)(arg1_type, arg2_type, arg3_type))</argsstring>
        <name>connect</name>
        <param>
          <type>desttype *</type>
          <declname>pclass</declname>
        </param>
        <param>
          <type>void(desttype::*)(arg1_type, arg2_type, arg3_type)</type>
          <declname>pmemfun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2137" column="1" bodyfile="sigslot.h" bodystart="2137" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal3_1a10e3bf2530eb9e62ed4fd0e145bfac81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type a1, arg2_type a2, arg3_type a3)</argsstring>
        <name>emit</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>arg3_type</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2148" column="1" bodyfile="sigslot.h" bodystart="2148" bodyend="2163"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal3_1ab3db23ef621a0948d250279799c7b09f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;::operator()</definition>
        <argsstring>(arg1_type a1, arg2_type a2, arg3_type a3)</argsstring>
        <name>operator()</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>arg3_type</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2165" column="1" bodyfile="sigslot.h" bodystart="2165" bodyend="2180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="231">
        <label>sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal3"/>
        <childnode refid="232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="232">
        <label>sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base3"/>
        <childnode refid="233" relation="public-inheritance">
        </childnode>
      </node>
      <node id="234">
        <label>mt_policy</label>
      </node>
      <node id="233">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="234" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="235">
        <label>sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal3"/>
        <childnode refid="236" relation="public-inheritance">
        </childnode>
      </node>
      <node id="236">
        <label>sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base3"/>
        <childnode refid="237" relation="public-inheritance">
        </childnode>
      </node>
      <node id="238">
        <label>mt_policy</label>
      </node>
      <node id="237">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="238" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="2122" column="1" bodyfile="sigslot.h" bodystart="2121" bodyend="2181"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base3_1ae2699ce7e97873e22df157471eb22f36" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>_signal_base3</name></member>
      <member refid="classsigslot_1_1__signal__base3_1aed60ea88729200b0fcb12fcfebd16a2c" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>_signal_base3</name></member>
      <member refid="classsigslot_1_1signal3_1a08232ae3b36fd31ec850ade003a2b223" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>connect</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a3579725fb44440638194b374cf5f401f" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1signal3_1ab183eed66345b347984339c5b27e0873" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base3_1ae388a3ad320d4a641190870fdbbf2443" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a9f3b9151fd99881f259283fd7dfc1a7b" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1signal3_1a10e3bf2530eb9e62ed4fd0e145bfac81" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a6d5697983814a4f95398ec119f9316d4" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a12827e355fb1aa4b2d655a4c3f9a65d0" prot="protected" virt="non-virtual"><scope>sigslot::signal3</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1signal3_1ab3db23ef621a0948d250279799c7b09f" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>operator()</name></member>
      <member refid="classsigslot_1_1signal3_1a04f51711a997e26a9d285da00431c01f" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>signal3</name></member>
      <member refid="classsigslot_1_1signal3_1ae96bc3af6b2ff424e74ac81ff260dbdd" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>signal3</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a0da5458d64b4e21b0f2b839826838e0d" prot="public" virt="virtual"><scope>sigslot::signal3</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base3_1a9fd81d281480f07ff9b0742503bb3edc" prot="public" virt="virtual"><scope>sigslot::signal3</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base3_1aea47871a26a26b0e463d6f5d219d710c" prot="public" virt="non-virtual"><scope>sigslot::signal3</scope><name>~_signal_base3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
