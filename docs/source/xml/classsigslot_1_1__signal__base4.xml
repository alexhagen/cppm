<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1__signal__base4" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base4</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal4" prot="public" virt="non-virtual">sigslot::signal4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>arg1_type</declname>
        <defname>arg1_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg2_type</declname>
        <defname>arg2_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg3_type</declname>
        <defname>arg3_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>arg4_type</declname>
        <defname>arg4_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base4_1aea35b507c1a9e79a103e652ba90c96f5" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base4" kindref="compound">_connection_base4</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base4&lt;arg1_type, arg2_type, arg3_type, arg4_type, mt_policy&gt; *&gt; sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="947" column="1" bodyfile="sigslot.h" bodystart="947" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base4_1af118c689a5d8f9c90a2b91cb4bf0b7c9" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="948" column="1" bodyfile="sigslot.h" bodystart="948" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base4_1ad2fa207c81748fc90c3dab04df673c53" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="949" column="1" bodyfile="sigslot.h" bodystart="949" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base4_1a063f41e2f4817b0a58642e836464045a" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1053" column="1" bodyfile="sigslot.h" bodystart="1053" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base4_1a6d1a0311b333c7f7e324ddcf64ff77e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::_signal_base4</definition>
        <argsstring>()</argsstring>
        <name>_signal_base4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="951" column="1" bodyfile="sigslot.h" bodystart="951" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base4_1a17a5b2252368054aaf270c3fd2414d20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::_signal_base4</definition>
        <argsstring>(const _signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt; &amp;s)</argsstring>
        <name>_signal_base4</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base4" kindref="compound">_signal_base4</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="956" column="1" bodyfile="sigslot.h" bodystart="956" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base4_1a1a74ae3ce51fe799cbcfd38862c22c2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="972" column="1" bodyfile="sigslot.h" bodystart="972" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base4_1a3a2d39c097c82c3cd26f1fe16c6e6c31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::~_signal_base4</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="989" column="1" bodyfile="sigslot.h" bodystart="989" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base4_1adb24830605ad8a4dc4f06996b6a938f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="994" column="1" bodyfile="sigslot.h" bodystart="994" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base4_1ace9704303ba56183645a81e5b235f35c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1011" column="1" bodyfile="sigslot.h" bodystart="1011" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base4_1a43773cf6c5aa4258f3cbe96bbf921f7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1031" column="1" bodyfile="sigslot.h" bodystart="1031" bodyend="1050"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="116">
        <label>sigslot::signal4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal4"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base4"/>
        <childnode refid="114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>mt_policy</label>
      </node>
      <node id="114">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="117">
        <label>sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base4"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>mt_policy</label>
      </node>
      <node id="118">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="944" column="1" bodyfile="sigslot.h" bodystart="943" bodyend="1054"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base4_1a6d1a0311b333c7f7e324ddcf64ff77e5" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>_signal_base4</name></member>
      <member refid="classsigslot_1_1__signal__base4_1a17a5b2252368054aaf270c3fd2414d20" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>_signal_base4</name></member>
      <member refid="classsigslot_1_1__signal__base4_1aea35b507c1a9e79a103e652ba90c96f5" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base4_1af118c689a5d8f9c90a2b91cb4bf0b7c9" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base4_1ace9704303ba56183645a81e5b235f35c" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base4_1adb24830605ad8a4dc4f06996b6a938f6" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base4_1ad2fa207c81748fc90c3dab04df673c53" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base4_1a063f41e2f4817b0a58642e836464045a" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base4_1a43773cf6c5aa4258f3cbe96bbf921f7f" prot="public" virt="virtual"><scope>sigslot::_signal_base4</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base4_1a1a74ae3ce51fe799cbcfd38862c22c2e" prot="public" virt="virtual"><scope>sigslot::_signal_base4</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base4_1a3a2d39c097c82c3cd26f1fe16c6e6c31" prot="public" virt="non-virtual"><scope>sigslot::_signal_base4</scope><name>~_signal_base4</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
