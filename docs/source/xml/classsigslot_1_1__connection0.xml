<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1__connection0" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_connection0</compoundname>
    <basecompoundref refid="classsigslot_1_1__connection__base0" prot="public" virt="non-virtual">sigslot::_connection_base0&lt; mt_policy &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>dest_type</declname>
        <defname>dest_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__connection0_1aeb02b93286a6b14e92b1dae031bce6eb" prot="private" static="no" mutable="no">
        <type>dest_type *</type>
        <definition>dest_type* sigslot::_connection0&lt; dest_type, mt_policy &gt;::m_pobject</definition>
        <argsstring></argsstring>
        <name>m_pobject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1559" column="1" bodyfile="sigslot.h" bodystart="1559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsigslot_1_1__connection0_1ac37afe9ecd838633fecbd0db68fb2984" prot="private" static="no" mutable="no">
        <type>void(dest_type::*</type>
        <definition>void(dest_type::*  sigslot::_connection0&lt; dest_type, mt_policy &gt;::m_pmemfun) ()</definition>
        <argsstring>)()</argsstring>
        <name>m_pmemfun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1560" column="1" bodyfile="sigslot.h" bodystart="1560" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__connection0_1a467d8ef3dde4833120f9cf2546ac7dc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_connection0&lt; dest_type, mt_policy &gt;::_connection0</definition>
        <argsstring>()</argsstring>
        <name>_connection0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1526" column="1" bodyfile="sigslot.h" bodystart="1526" bodyend="1530"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection0_1ae13abf42a4077b23eb82d4895d05fa05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_connection0&lt; dest_type, mt_policy &gt;::_connection0</definition>
        <argsstring>(dest_type *pobject, void(dest_type::*pmemfun)())</argsstring>
        <name>_connection0</name>
        <param>
          <type>dest_type *</type>
          <declname>pobject</declname>
        </param>
        <param>
          <type>void(dest_type::*)()</type>
          <declname>pmemfun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1532" column="1" bodyfile="sigslot.h" bodystart="1532" bodyend="1536"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection0_1a80f5988e6205f357c66f4a493471cd57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsigslot_1_1__connection__base0" kindref="compound">_connection_base0</ref>&lt; mt_policy &gt; *</type>
        <definition>virtual _connection_base0&lt;mt_policy&gt;* sigslot::_connection0&lt; dest_type, mt_policy &gt;::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <reimplements refid="classsigslot_1_1__connection__base0_1ab775e0067ed68b058ce232bd89b357c3">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1538" column="1" bodyfile="sigslot.h" bodystart="1538" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection0_1ab1ad999301f8ef66cfc56f1203c59982" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsigslot_1_1__connection__base0" kindref="compound">_connection_base0</ref>&lt; mt_policy &gt; *</type>
        <definition>virtual _connection_base0&lt;mt_policy&gt;* sigslot::_connection0&lt; dest_type, mt_policy &gt;::duplicate</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pnewdest)</argsstring>
        <name>duplicate</name>
        <reimplements refid="classsigslot_1_1__connection__base0_1a5322f4eada294bb6c57f34c3ae18f05b">duplicate</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pnewdest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1543" column="1" bodyfile="sigslot.h" bodystart="1543" bodyend="1546"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection0_1aecf936cd64e17e33f052fa6768f70437" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void sigslot::_connection0&lt; dest_type, mt_policy &gt;::emit</definition>
        <argsstring>()</argsstring>
        <name>emit</name>
        <reimplements refid="classsigslot_1_1__connection__base0_1a67fd5bc3863d2cb1278cd0b4d526cbe4">emit</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1548" column="1" bodyfile="sigslot.h" bodystart="1548" bodyend="1551"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__connection0_1aa0d501b98270a9bac344cc04df5b95ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
        <definition>virtual has_slots&lt;mt_policy&gt;* sigslot::_connection0&lt; dest_type, mt_policy &gt;::getdest</definition>
        <argsstring>() const </argsstring>
        <name>getdest</name>
        <reimplements refid="classsigslot_1_1__connection__base0_1ac298c58c25a6a96b02ce0ecf250103ba">getdest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1553" column="1" bodyfile="sigslot.h" bodystart="1553" bodyend="1556"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>sigslot::_connection0&lt; dest_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection0"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>sigslot::_connection_base0&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection__base0"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>sigslot::_connection0&lt; dest_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection0"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>sigslot::_connection_base0&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__connection__base0"/>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="1524" column="1" bodyfile="sigslot.h" bodystart="1523" bodyend="1561"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__connection0_1a467d8ef3dde4833120f9cf2546ac7dc4" prot="public" virt="non-virtual"><scope>sigslot::_connection0</scope><name>_connection0</name></member>
      <member refid="classsigslot_1_1__connection0_1ae13abf42a4077b23eb82d4895d05fa05" prot="public" virt="non-virtual"><scope>sigslot::_connection0</scope><name>_connection0</name></member>
      <member refid="classsigslot_1_1__connection0_1a80f5988e6205f357c66f4a493471cd57" prot="public" virt="virtual"><scope>sigslot::_connection0</scope><name>clone</name></member>
      <member refid="classsigslot_1_1__connection0_1ab1ad999301f8ef66cfc56f1203c59982" prot="public" virt="virtual"><scope>sigslot::_connection0</scope><name>duplicate</name></member>
      <member refid="classsigslot_1_1__connection0_1aecf936cd64e17e33f052fa6768f70437" prot="public" virt="virtual"><scope>sigslot::_connection0</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__connection0_1aa0d501b98270a9bac344cc04df5b95ff" prot="public" virt="virtual"><scope>sigslot::_connection0</scope><name>getdest</name></member>
      <member refid="classsigslot_1_1__connection0_1ac37afe9ecd838633fecbd0db68fb2984" prot="private" virt="non-virtual"><scope>sigslot::_connection0</scope><name>m_pmemfun</name></member>
      <member refid="classsigslot_1_1__connection0_1aeb02b93286a6b14e92b1dae031bce6eb" prot="private" virt="non-virtual"><scope>sigslot::_connection0</scope><name>m_pobject</name></member>
      <member refid="classsigslot_1_1__connection__base0_1a5e9b9f434465281aea124742ea1f8a3b" prot="public" virt="virtual"><scope>sigslot::_connection0</scope><name>~_connection_base0</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
