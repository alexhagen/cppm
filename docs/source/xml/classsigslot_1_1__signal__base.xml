<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1__signal__base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>sigslot::_signal_base</compoundname>
    <basecompoundref prot="public" virt="non-virtual">mt_policy</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base0" prot="public" virt="non-virtual">sigslot::_signal_base0&lt; mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base1" prot="public" virt="non-virtual">sigslot::_signal_base1&lt; arg1_type, mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base2" prot="public" virt="non-virtual">sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base3" prot="public" virt="non-virtual">sigslot::_signal_base3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base4" prot="public" virt="non-virtual">sigslot::_signal_base4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base5" prot="public" virt="non-virtual">sigslot::_signal_base5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base6" prot="public" virt="non-virtual">sigslot::_signal_base6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base7" prot="public" virt="non-virtual">sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</derivedcompoundref>
    <derivedcompoundref refid="classsigslot_1_1__signal__base8" prot="public" virt="non-virtual">sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void sigslot::_signal_base&lt; mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)=0</argsstring>
        <name>slot_disconnect</name>
        <reimplementedby refid="classsigslot_1_1__signal__base0_1a002f81194c0b2e224c59fb9c43b769f0">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base1_1a62bebb3aa28d822b2fb7c93f76c85ffd">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base1_1a62bebb3aa28d822b2fb7c93f76c85ffd">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base1_1a62bebb3aa28d822b2fb7c93f76c85ffd">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base2_1ae33d30c9fe1da690122dd056b25f0c9a">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base2_1ae33d30c9fe1da690122dd056b25f0c9a">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base3_1a0da5458d64b4e21b0f2b839826838e0d">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base4_1a43773cf6c5aa4258f3cbe96bbf921f7f">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base5_1a9abd97f4378a4f72fb5ec7a11d983c76">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base6_1a956d68d0659dffe49749b5cd7f5466c1">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base7_1a38ae3c8415750b772fe1cab99afb0a04">slot_disconnect</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base8_1a214c5d81faababf978bb251983ebbac0">slot_disconnect</reimplementedby>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void sigslot::_signal_base&lt; mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *poldslot, has_slots&lt; mt_policy &gt; *pnewslot)=0</argsstring>
        <name>slot_duplicate</name>
        <reimplementedby refid="classsigslot_1_1__signal__base0_1acd0840dbef9a34fc48469e04f1d2df45">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base1_1a68eaa2931d85e984ab128c937d3319ea">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base1_1a68eaa2931d85e984ab128c937d3319ea">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base1_1a68eaa2931d85e984ab128c937d3319ea">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base2_1a23f085b3816ad6f9952e5fc3e8673ea4">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base2_1a23f085b3816ad6f9952e5fc3e8673ea4">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base3_1a9fd81d281480f07ff9b0742503bb3edc">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base4_1a1a74ae3ce51fe799cbcfd38862c22c2e">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base5_1a1d5c77453182dd7ef6482ebf272f9ba7">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base6_1a6107b837baa0f7895806631111766692">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base7_1a8942155af25b0b1847827fc797ba7465">slot_duplicate</reimplementedby>
        <reimplementedby refid="classsigslot_1_1__signal__base8_1a4174d19421ebaf1c0441c7c71eb3e2ea">slot_duplicate</reimplementedby>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>poldslot</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pnewslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="420" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="74">
        <label>sigslot::signal4&lt; arg1_type, arg2_type, arg3_type, arg4_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal4"/>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>sigslot::signal0&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal0"/>
        <childnode refid="65" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>sigslot::signal3&lt; arg1_type, arg2_type, arg3_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal3"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal8"/>
        <childnode refid="81" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal7"/>
        <childnode refid="79" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>sigslot::signal5&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal5"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>sigslot::_signal_base4&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base4"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal2"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>sigslot::signal6&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal6"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>sigslot::_signal_base7&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base7"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>sigslot::_signal_base6&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base6"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>sigslot::_signal_base5&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base5"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>mt_policy</label>
      </node>
      <node id="68">
        <label>sigslot::signal1&lt; arg1_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal1"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>sigslot::_signal_base8&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base8"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>sigslot::_signal_base3&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base3"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>sigslot::_signal_base2&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base2"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>sigslot::_signal_base1&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base1"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>sigslot::_signal_base0&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base0"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="84">
        <label>mt_policy</label>
      </node>
      <node id="83">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="84" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="417" column="1" bodyfile="sigslot.h" bodystart="416" bodyend="421"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f" prot="public" virt="pure-virtual"><scope>sigslot::_signal_base</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667" prot="public" virt="pure-virtual"><scope>sigslot::_signal_base</scope><name>slot_duplicate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
