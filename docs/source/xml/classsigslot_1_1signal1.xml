<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1signal1" kind="class" language="C++" prot="public">
    <compoundname>sigslot::signal1</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base1" prot="public" virt="non-virtual">sigslot::_signal_base1&lt; arg1_type, mt_policy &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>arg1_type</declname>
        <defname>arg1_type</defname>
      </param>
      <param>
        <type>class</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
        <defval>SIGSLOT_DEFAULT_MT_POLICY</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1signal1_1a97a0f31920c310442ba0e0e4701b468a" prot="public" static="no">
        <type><ref refid="classsigslot_1_1__signal__base1" kindref="compound">_signal_base1</ref>&lt; arg1_type, mt_policy &gt;::connections_list::const_iterator</type>
        <definition>typedef _signal_base1&lt;arg1_type, mt_policy&gt;::connections_list::const_iterator sigslot::signal1&lt; arg1_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2001" column="1" bodyfile="sigslot.h" bodystart="2001" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1signal1_1a62add39add30b6a4d6d6208f8592eac4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal1&lt; arg1_type, mt_policy &gt;::signal1</definition>
        <argsstring>()</argsstring>
        <name>signal1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2002" column="1" bodyfile="sigslot.h" bodystart="2002" bodyend="2005"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal1_1aafeb2693c7345d28ed9fb445cbf15545" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal1&lt; arg1_type, mt_policy &gt;::signal1</definition>
        <argsstring>(const signal1&lt; arg1_type, mt_policy &gt; &amp;s)</argsstring>
        <name>signal1</name>
        <param>
          <type>const <ref refid="classsigslot_1_1signal1" kindref="compound">signal1</ref>&lt; arg1_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2007" column="1" bodyfile="sigslot.h" bodystart="2007" bodyend="2011"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal1_1ac79b785d3d18cb2b6a8c09be02a4b4e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class desttype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sigslot::signal1&lt; arg1_type, mt_policy &gt;::connect</definition>
        <argsstring>(desttype *pclass, void(desttype::*pmemfun)(arg1_type))</argsstring>
        <name>connect</name>
        <param>
          <type>desttype *</type>
          <declname>pclass</declname>
        </param>
        <param>
          <type>void(desttype::*)(arg1_type)</type>
          <declname>pmemfun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2014" column="1" bodyfile="sigslot.h" bodystart="2014" bodyend="2021"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal1_1ac7d1545dcd9bfe97778f5a9677fe5ad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal1&lt; arg1_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type a1)</argsstring>
        <name>emit</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2023" column="1" bodyfile="sigslot.h" bodystart="2023" bodyend="2038"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal1_1a2f32594099386653dd091369636eada9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal1&lt; arg1_type, mt_policy &gt;::operator()</definition>
        <argsstring>(arg1_type a1)</argsstring>
        <name>operator()</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2040" column="1" bodyfile="sigslot.h" bodystart="2040" bodyend="2055"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="216">
        <label>sigslot::_signal_base1&lt; arg1_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base1"/>
        <childnode refid="217" relation="public-inheritance">
        </childnode>
      </node>
      <node id="218">
        <label>mt_policy</label>
      </node>
      <node id="215">
        <label>sigslot::signal1&lt; arg1_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal1"/>
        <childnode refid="216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="217">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="218" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="220">
        <label>sigslot::_signal_base1&lt; arg1_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base1"/>
        <childnode refid="221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="222">
        <label>mt_policy</label>
      </node>
      <node id="219">
        <label>sigslot::signal1&lt; arg1_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal1"/>
        <childnode refid="220" relation="public-inheritance">
        </childnode>
      </node>
      <node id="221">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="222" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="1999" column="1" bodyfile="sigslot.h" bodystart="1998" bodyend="2056"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base1_1a8b53217c6dd9f9e25935d7aeac192914" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>_signal_base1</name></member>
      <member refid="classsigslot_1_1__signal__base1_1a31b0f787013db310d90094c2c1212fa7" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>_signal_base1</name></member>
      <member refid="classsigslot_1_1signal1_1ac79b785d3d18cb2b6a8c09be02a4b4e7" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>connect</name></member>
      <member refid="classsigslot_1_1__signal__base1_1a71527d7cc0fc5363e012e0ef4942caac" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1signal1_1a97a0f31920c310442ba0e0e4701b468a" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base1_1ac8e9595f90b08025146b70d36b612b09" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base1_1a6018a46b416a9df4b7818d02ca09ac44" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1signal1_1ac7d1545dcd9bfe97778f5a9677fe5ad1" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__signal__base1_1ad7660ad24e4f2760eac5500a3efa6050" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base1_1ac7e77782350e95ad4255c89db2ec229c" prot="protected" virt="non-virtual"><scope>sigslot::signal1</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1signal1_1a2f32594099386653dd091369636eada9" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>operator()</name></member>
      <member refid="classsigslot_1_1signal1_1a62add39add30b6a4d6d6208f8592eac4" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>signal1</name></member>
      <member refid="classsigslot_1_1signal1_1aafeb2693c7345d28ed9fb445cbf15545" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>signal1</name></member>
      <member refid="classsigslot_1_1__signal__base1_1a62bebb3aa28d822b2fb7c93f76c85ffd" prot="public" virt="virtual"><scope>sigslot::signal1</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base1_1a68eaa2931d85e984ab128c937d3319ea" prot="public" virt="virtual"><scope>sigslot::signal1</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base1_1af9c13bc064f6fabf22bb58563fab35c1" prot="public" virt="non-virtual"><scope>sigslot::signal1</scope><name>~_signal_base1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
