<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1signal2" kind="class" language="C++" prot="public">
    <compoundname>sigslot::signal2</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base2" prot="public" virt="non-virtual">sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>arg1_type</declname>
        <defname>arg1_type</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>arg2_type</declname>
        <defname>arg2_type</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>mt_policy</declname>
        <defname>mt_policy</defname>
        <defval>SIGSLOT_DEFAULT_MT_POLICY</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1signal2_1a8051cecb4e16c6df710cdf12c5367f53" prot="public" static="no">
        <type><ref refid="classsigslot_1_1__signal__base2" kindref="compound">_signal_base2</ref>&lt; arg1_type, arg2_type, mt_policy &gt;::connections_list::const_iterator</type>
        <definition>typedef _signal_base2&lt;arg1_type, arg2_type, mt_policy&gt;::connections_list::const_iterator sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2062" column="1" bodyfile="sigslot.h" bodystart="2062" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1signal2_1aad64b8ad4b0ed49bf37d90ce5d23d23a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;::signal2</definition>
        <argsstring>()</argsstring>
        <name>signal2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2063" column="1" bodyfile="sigslot.h" bodystart="2063" bodyend="2066"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal2_1a02759080e6b4353435081e426cd02407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;::signal2</definition>
        <argsstring>(const signal2&lt; arg1_type, arg2_type, mt_policy &gt; &amp;s)</argsstring>
        <name>signal2</name>
        <param>
          <type>const <ref refid="classsigslot_1_1signal2" kindref="compound">signal2</ref>&lt; arg1_type, arg2_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2068" column="1" bodyfile="sigslot.h" bodystart="2068" bodyend="2072"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal2_1a019af980464974ca63d77c1e9834bfed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class desttype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;::connect</definition>
        <argsstring>(desttype *pclass, void(desttype::*pmemfun)(arg1_type, arg2_type))</argsstring>
        <name>connect</name>
        <param>
          <type>desttype *</type>
          <declname>pclass</declname>
        </param>
        <param>
          <type>void(desttype::*)(arg1_type, arg2_type)</type>
          <declname>pmemfun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2075" column="1" bodyfile="sigslot.h" bodystart="2075" bodyend="2083"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal2_1a21a20be1cce06c75a2670c2a0dd13409" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type a1, arg2_type a2)</argsstring>
        <name>emit</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2085" column="1" bodyfile="sigslot.h" bodystart="2085" bodyend="2100"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal2_1af884ec1a53618556486f07ef006be10e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;::operator()</definition>
        <argsstring>(arg1_type a1, arg2_type a2)</argsstring>
        <name>operator()</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2102" column="1" bodyfile="sigslot.h" bodystart="2102" bodyend="2117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="236">
        <label>sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base2"/>
        <childnode refid="237" relation="public-inheritance">
        </childnode>
      </node>
      <node id="235">
        <label>sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal2"/>
        <childnode refid="236" relation="public-inheritance">
        </childnode>
      </node>
      <node id="238">
        <label>mt_policy</label>
      </node>
      <node id="237">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="238" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="240">
        <label>sigslot::_signal_base2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base2"/>
        <childnode refid="241" relation="public-inheritance">
        </childnode>
      </node>
      <node id="239">
        <label>sigslot::signal2&lt; arg1_type, arg2_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal2"/>
        <childnode refid="240" relation="public-inheritance">
        </childnode>
      </node>
      <node id="242">
        <label>mt_policy</label>
      </node>
      <node id="241">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="242" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="2060" column="1" bodyfile="sigslot.h" bodystart="2059" bodyend="2118"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base2_1a1a891ebe5ab1cdfb3138c2fdc32c6c9c" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>_signal_base2</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a5c42c60b4b2afc55314dd07de1c5c587" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>_signal_base2</name></member>
      <member refid="classsigslot_1_1signal2_1a019af980464974ca63d77c1e9834bfed" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>connect</name></member>
      <member refid="classsigslot_1_1__signal__base2_1afe119ceec2a5f2d38065a5363c4b4dc4" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1signal2_1a8051cecb4e16c6df710cdf12c5367f53" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a720d11b4e86ef862f97fe78098b19d7f" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a2749b7ee2d1ac7f8eee02a77490ece81" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1signal2_1a21a20be1cce06c75a2670c2a0dd13409" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a540951f83ccc997fb4fd548e83460e68" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base2_1ac507c6988f75d2fa75d25ac06d3f3717" prot="protected" virt="non-virtual"><scope>sigslot::signal2</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1signal2_1af884ec1a53618556486f07ef006be10e" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>operator()</name></member>
      <member refid="classsigslot_1_1signal2_1aad64b8ad4b0ed49bf37d90ce5d23d23a" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>signal2</name></member>
      <member refid="classsigslot_1_1signal2_1a02759080e6b4353435081e426cd02407" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>signal2</name></member>
      <member refid="classsigslot_1_1__signal__base2_1ae33d30c9fe1da690122dd056b25f0c9a" prot="public" virt="virtual"><scope>sigslot::signal2</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base2_1a23f085b3816ad6f9952e5fc3e8673ea4" prot="public" virt="virtual"><scope>sigslot::signal2</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base2_1ab18bbe49a91957e06f5ccaf9874327f5" prot="public" virt="non-virtual"><scope>sigslot::signal2</scope><name>~_signal_base2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
