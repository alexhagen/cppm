<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsigslot_1_1signal7" kind="class" language="C++" prot="public">
    <compoundname>sigslot::signal7</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base7" prot="public" virt="non-virtual">sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class arg2_type</type>
      </param>
      <param>
        <type>class arg3_type</type>
      </param>
      <param>
        <type>class arg4_type</type>
      </param>
      <param>
        <type>class arg5_type</type>
      </param>
      <param>
        <type>class arg6_type</type>
      </param>
      <param>
        <type>class arg7_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
        <defval>SIGSLOT_DEFAULT_MT_POLICY</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1signal7_1a1244755eb1e8d9472559044fa8fa96e4" prot="public" static="no">
        <type><ref refid="classsigslot_1_1__signal__base7" kindref="compound">_signal_base7</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::connections_list::const_iterator</type>
        <definition>typedef _signal_base7&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy&gt;::connections_list::const_iterator sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2395" column="1" bodyfile="sigslot.h" bodystart="2395" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1signal7_1a030ec1c86671348023a2866829b1d691" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::signal7</definition>
        <argsstring>()</argsstring>
        <name>signal7</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2396" column="1" bodyfile="sigslot.h" bodystart="2396" bodyend="2399"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal7_1accbb4d719a1357de2419eac142d42f3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::signal7</definition>
        <argsstring>(const signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt; &amp;s)</argsstring>
        <name>signal7</name>
        <param>
          <type>const <ref refid="classsigslot_1_1signal7" kindref="compound">signal7</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2401" column="1" bodyfile="sigslot.h" bodystart="2401" bodyend="2407"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal7_1af265ff2ad52bf7269d05c8d781697866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class desttype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::connect</definition>
        <argsstring>(desttype *pclass, void(desttype::*pmemfun)(arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type))</argsstring>
        <name>connect</name>
        <param>
          <type>desttype *</type>
          <declname>pclass</declname>
        </param>
        <param>
          <type>void(desttype::*)(arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type)</type>
          <declname>pmemfun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2410" column="1" bodyfile="sigslot.h" bodystart="2410" bodyend="2421"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal7_1a993e93a7c9904afd07f8c0c1d85a527b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::emit</definition>
        <argsstring>(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4, arg5_type a5, arg6_type a6, arg7_type a7)</argsstring>
        <name>emit</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>arg3_type</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>arg4_type</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>arg5_type</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>arg6_type</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>arg7_type</type>
          <declname>a7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2423" column="1" bodyfile="sigslot.h" bodystart="2423" bodyend="2439"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1signal7_1a3c59807b6dd25d5bace94c538bb62104" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;::operator()</definition>
        <argsstring>(arg1_type a1, arg2_type a2, arg3_type a3, arg4_type a4, arg5_type a5, arg6_type a6, arg7_type a7)</argsstring>
        <name>operator()</name>
        <param>
          <type>arg1_type</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>arg2_type</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>arg3_type</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>arg4_type</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>arg5_type</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>arg6_type</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>arg7_type</type>
          <declname>a7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="2441" column="1" bodyfile="sigslot.h" bodystart="2441" bodyend="2457"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="263">
        <label>sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal7"/>
        <childnode refid="264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="266">
        <label>mt_policy</label>
      </node>
      <node id="265">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="264">
        <label>sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base7"/>
        <childnode refid="265" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="267">
        <label>sigslot::signal7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal7"/>
        <childnode refid="268" relation="public-inheritance">
        </childnode>
      </node>
      <node id="270">
        <label>mt_policy</label>
      </node>
      <node id="269">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="270" relation="public-inheritance">
        </childnode>
      </node>
      <node id="268">
        <label>sigslot::_signal_base7&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base7"/>
        <childnode refid="269" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="2392" column="1" bodyfile="sigslot.h" bodystart="2390" bodyend="2458"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base7_1a4fdbef17b7c25a53b4610410d60fcdfc" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>_signal_base7</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a678d0d92bc65da5113da8296a3c7e7e5" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>_signal_base7</name></member>
      <member refid="classsigslot_1_1signal7_1af265ff2ad52bf7269d05c8d781697866" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>connect</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a26f5e886d0ff2fe1c88858b172f73770" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1signal7_1a1244755eb1e8d9472559044fa8fa96e4" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a09804df31bec573e360a0a6156ad55d1" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a39c91c2e580540fbff149ee5d1d47501" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1signal7_1a993e93a7c9904afd07f8c0c1d85a527b" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>emit</name></member>
      <member refid="classsigslot_1_1__signal__base7_1ab638034bec9e3b48858e2317ffdf78ca" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base7_1af749f636932eb90375b4b5e8711756b9" prot="protected" virt="non-virtual"><scope>sigslot::signal7</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1signal7_1a3c59807b6dd25d5bace94c538bb62104" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>operator()</name></member>
      <member refid="classsigslot_1_1signal7_1a030ec1c86671348023a2866829b1d691" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>signal7</name></member>
      <member refid="classsigslot_1_1signal7_1accbb4d719a1357de2419eac142d42f3a" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>signal7</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a38ae3c8415750b772fe1cab99afb0a04" prot="public" virt="virtual"><scope>sigslot::signal7</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base7_1a8942155af25b0b1847827fc797ba7465" prot="public" virt="virtual"><scope>sigslot::signal7</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base7_1ae26450d60511692155df999feef5d17c" prot="public" virt="non-virtual"><scope>sigslot::signal7</scope><name>~_signal_base7</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
