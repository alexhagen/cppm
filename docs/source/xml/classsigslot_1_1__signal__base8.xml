<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classsigslot_1_1__signal__base8" kind="class" language="C++" prot="public">
    <compoundname>sigslot::_signal_base8</compoundname>
    <basecompoundref refid="classsigslot_1_1__signal__base" prot="public" virt="non-virtual">sigslot::_signal_base&lt; mt_policy &gt;</basecompoundref>
    <derivedcompoundref refid="classsigslot_1_1signal8" prot="public" virt="non-virtual">sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class arg1_type</type>
      </param>
      <param>
        <type>class arg2_type</type>
      </param>
      <param>
        <type>class arg3_type</type>
      </param>
      <param>
        <type>class arg4_type</type>
      </param>
      <param>
        <type>class arg5_type</type>
      </param>
      <param>
        <type>class arg6_type</type>
      </param>
      <param>
        <type>class arg7_type</type>
      </param>
      <param>
        <type>class arg8_type</type>
      </param>
      <param>
        <type>class mt_policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base8_1a24ab3253426f94f89b9fbcf31a006dce" prot="public" static="no">
        <type>std::list&lt; <ref refid="classsigslot_1_1__connection__base8" kindref="compound">_connection_base8</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt; * &gt;</type>
        <definition>typedef std::list&lt;_connection_base8&lt;arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy&gt; *&gt; sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::connections_list</definition>
        <argsstring></argsstring>
        <name>connections_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1411" column="1" bodyfile="sigslot.h" bodystart="1411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base8_1aafa670405a4b0de46ce12f7b5933760f" prot="public" static="no">
        <type>connections_list::const_iterator</type>
        <definition>typedef connections_list::const_iterator sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1412" column="1" bodyfile="sigslot.h" bodystart="1412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsigslot_1_1__signal__base8_1af66d5bc5c012bef12e4825012a309c4e" prot="public" static="no">
        <type>connections_list::iterator</type>
        <definition>typedef connections_list::iterator sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1413" column="1" bodyfile="sigslot.h" bodystart="1413" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsigslot_1_1__signal__base8_1a8e787751763d8d05759d2173757f124e" prot="protected" static="no" mutable="no">
        <type>connections_list</type>
        <definition>connections_list sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::m_connected_slots</definition>
        <argsstring></argsstring>
        <name>m_connected_slots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1518" column="1" bodyfile="sigslot.h" bodystart="1518" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsigslot_1_1__signal__base8_1a6c85b75f8ad13e5f075a937c43734367" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::_signal_base8</definition>
        <argsstring>()</argsstring>
        <name>_signal_base8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1415" column="1" bodyfile="sigslot.h" bodystart="1415" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base8_1aacacaa6f6a15450e9bac0f5cd64351ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::_signal_base8</definition>
        <argsstring>(const _signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt; &amp;s)</argsstring>
        <name>_signal_base8</name>
        <param>
          <type>const <ref refid="classsigslot_1_1__signal__base8" kindref="compound">_signal_base8</ref>&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1420" column="1" bodyfile="sigslot.h" bodystart="1420" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base8_1a4174d19421ebaf1c0441c7c71eb3e2ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::slot_duplicate</definition>
        <argsstring>(const has_slots&lt; mt_policy &gt; *oldtarget, has_slots&lt; mt_policy &gt; *newtarget)</argsstring>
        <name>slot_duplicate</name>
        <reimplements refid="classsigslot_1_1__signal__base_1abaca2055066d9c79526fbb9399db1667">slot_duplicate</reimplements>
        <param>
          <type>const <ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>oldtarget</declname>
        </param>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>newtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1437" column="1" bodyfile="sigslot.h" bodystart="1437" bodyend="1452"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base8_1a52a212f984ff546515d5e6e20ac7ef20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::~_signal_base8</definition>
        <argsstring>()</argsstring>
        <name>~_signal_base8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1454" column="1" bodyfile="sigslot.h" bodystart="1454" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base8_1abe3c07398348ad7eddafa22b09d1cd97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::disconnect_all</definition>
        <argsstring>()</argsstring>
        <name>disconnect_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1459" column="1" bodyfile="sigslot.h" bodystart="1459" bodyend="1474"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base8_1a77aa9b79d342ec0aa1dedd4ab09f1939" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pclass)</argsstring>
        <name>disconnect</name>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pclass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1476" column="1" bodyfile="sigslot.h" bodystart="1476" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="classsigslot_1_1__signal__base8_1a214c5d81faababf978bb251983ebbac0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;::slot_disconnect</definition>
        <argsstring>(has_slots&lt; mt_policy &gt; *pslot)</argsstring>
        <name>slot_disconnect</name>
        <reimplements refid="classsigslot_1_1__signal__base_1a7fb7fd35c24e371a3eee667a68294c9f">slot_disconnect</reimplements>
        <param>
          <type><ref refid="classsigslot_1_1has__slots" kindref="compound">has_slots</ref>&lt; mt_policy &gt; *</type>
          <declname>pslot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sigslot.h" line="1496" column="1" bodyfile="sigslot.h" bodystart="1496" bodyend="1515"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="141">
        <label>sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base8"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>sigslot::signal8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1signal8"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>mt_policy</label>
      </node>
      <node id="142">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="145">
        <label>sigslot::_signal_base8&lt; arg1_type, arg2_type, arg3_type, arg4_type, arg5_type, arg6_type, arg7_type, arg8_type, mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base8"/>
        <childnode refid="146" relation="public-inheritance">
        </childnode>
      </node>
      <node id="147">
        <label>mt_policy</label>
      </node>
      <node id="146">
        <label>sigslot::_signal_base&lt; mt_policy &gt;</label>
        <link refid="classsigslot_1_1__signal__base"/>
        <childnode refid="147" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="sigslot.h" line="1407" column="1" bodyfile="sigslot.h" bodystart="1406" bodyend="1519"/>
    <listofallmembers>
      <member refid="classsigslot_1_1__signal__base8_1a6c85b75f8ad13e5f075a937c43734367" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>_signal_base8</name></member>
      <member refid="classsigslot_1_1__signal__base8_1aacacaa6f6a15450e9bac0f5cd64351ad" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>_signal_base8</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a24ab3253426f94f89b9fbcf31a006dce" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>connections_list</name></member>
      <member refid="classsigslot_1_1__signal__base8_1aafa670405a4b0de46ce12f7b5933760f" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>const_iterator</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a77aa9b79d342ec0aa1dedd4ab09f1939" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base8_1abe3c07398348ad7eddafa22b09d1cd97" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>disconnect_all</name></member>
      <member refid="classsigslot_1_1__signal__base8_1af66d5bc5c012bef12e4825012a309c4e" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>iterator</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a8e787751763d8d05759d2173757f124e" prot="protected" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>m_connected_slots</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a214c5d81faababf978bb251983ebbac0" prot="public" virt="virtual"><scope>sigslot::_signal_base8</scope><name>slot_disconnect</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a4174d19421ebaf1c0441c7c71eb3e2ea" prot="public" virt="virtual"><scope>sigslot::_signal_base8</scope><name>slot_duplicate</name></member>
      <member refid="classsigslot_1_1__signal__base8_1a52a212f984ff546515d5e6e20ac7ef20" prot="public" virt="non-virtual"><scope>sigslot::_signal_base8</scope><name>~_signal_base8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
